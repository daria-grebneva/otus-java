plugins {
    id 'java'
    id 'org.springframework.boot'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

dependencies {
    implementation 'org.projectlombok:lombok'
    implementation project(path: ':project:commonModel')
    annotationProcessor 'org.projectlombok:lombok'

    implementation("ch.qos.logback:logback-classic")
    implementation("com.google.code.gson:gson:${Versions.gson}")

    implementation("org.eclipse.jetty:jetty-servlet:${Versions.jetty}")
    implementation("org.eclipse.jetty:jetty-server:${Versions.jetty}")
    implementation("org.eclipse.jetty:jetty-webapp:${Versions.jetty}")
    implementation("org.eclipse.jetty:jetty-security:${Versions.jetty}")
    implementation("org.eclipse.jetty:jetty-http:${Versions.jetty}")
    implementation("org.eclipse.jetty:jetty-io:${Versions.jetty}")
    implementation("org.eclipse.jetty:jetty-util:${Versions.jetty}")
    implementation("org.freemarker:freemarker:${Versions.freemarker}")

    implementation("org.hibernate.orm:hibernate-core")
    implementation('org.flywaydb:flyway-core')
    implementation("org.postgresql:postgresql")

    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-amqp")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}


compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.with {
        encoding = 'UTF-8'
    }
}